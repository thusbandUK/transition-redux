
POINTS TO ADDRESS:

<1 - styling>

0.5) in examBoards.css finish tweaks for inverted colour scheme, there's a problem with the hover situation currently... you can invert the color scheme to vary between buttons (do this to examboard on intro page too), some white on red, some red on white
1) position and appearance of various buttons including excess and reset 
2) They need to be labelled!! so a little tag below (or above) reading the metal name / formula

4) Test tubes never outside of container - bootstrap, can also add stacking logic for mobile phones, on which... (see A)

<1 - styling ENDS>

<4 - text>

right this is a biggie, the text needs to render differently depending on the exam board

0.5) (From A) Individual form beneath each tube (which can contain the metal label) in which to input observations, 
put it in the same container as the test tubes so that they stack together for mobile access
1) read previous notes and decide what can be used between all boards and what cannot be left out of any boards
2) Mostly you need to add explanations for Mn2+ and Cr3+ and then all other stuff can be recycled / ommitted
(might need to rejig the section already written for AQA about CuCl42-)
3) figure out how to modularise the printing of text / diagrams
4) figure out how the text should be laid out

<4 - text ENDS>








<2 - on overriding the link colors>

I think you need to make a custom theme...
https://create-react-app.dev/docs/adding-bootstrap/#using-a-custom-theme

...like so...
https://getbootstrap.com/docs/4.6/getting-started/theming/#variable-defaults



This first page... 
https://react-bootstrap.github.io/getting-started/introduction/

...led to the two above via this:
https://getbootstrap.com/docs/4.4/getting-started/theming/

<2 - on overriding the link colors ENDS>

LINK FROM PREVIOUS ISSUES:


new links:

https://redux.js.org/tutorials/quick-start

for a quick-start with redux 

So I've more or less followed that but...

this post: https://stackoverflow.com/questions/73834918/react-router-dom6-4-1-not-rendering-components-and-also-not-logging-any-errors

...made me realise that the <Router> wrapper consistently demanded by the error messages is referring to a react-redux router, not
a react-router-dom <ProvideRouter>

this is all exacerbated by the fact that the current redux docs are not written for the latest react-router-dom dox, that said
there seems to be a way of doing react-router-dom, available here: 

https://reactrouter.com/en/main/upgrading/v5#relative-routes-and-links

...that shows a v6 router app that looks remarkably similar to a v5 router app

So the best thing might be to mess around a bit more with the Router aspect until you can get it as most like what it used to be
and then you can hopefully switch out BrowserProvider for Provider. I mean the implication seems to be that react-redux provides
a way of routing that users the react-redux router sort of instead of but still in tandem with the react-router-dom

Okay but last thing I did (from the stackexchange post above) worked!!! You should be cooking on gas very soon...

This looks awesome, only caught it right at the end:

https://www.freecodecamp.org/news/how-to-use-react-router-version-6/#:~:text=To%20install%20React%20Router%2C%20all,%2Drouter%2Ddom%406%20.

React Router dox (latest version 6.4.3)

https://reactrouter.com/en/main/components/nav-link

Read all of this stackexchange query and response so many times and realised on final reread the above-described compatability issue

https://stackoverflow.com/questions/43351752/react-router-changes-url-but-not-view





There does need to be some routing. We can use Ben's format, the landing page will have the introduction AND the exam board selector

then that takes the user to the reactions page, where it will have the links at the bottom, as per Ben's, so two pages basically

you're going to need a component that says: "Oop, are you sure? You're gonna lose your work"

<1 - on routing ENDS>


